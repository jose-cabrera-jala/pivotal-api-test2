import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder

group 'org.fundacionjala.pivotalapi'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()
        maven {
            url "http://repo.bodar.com"
        }
    }

    dependencies {
        classpath 'net.masterthought:cucumber-reporting:2.5.0'
    }
}

dependencies {
    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.1'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '3.0.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'com.github.markusbernhardt', name: 'proxy-vole', version:'1.0.1'
    testCompile group: 'info.cukes', name: 'cucumber-java', version: '1.2.4'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.4'
    testCompile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.4'
}

task executeFeatures() {
    dependsOn compileTestJava, assemble
    doLast {
        File file = new File("cucumber-html-report")
        file.delete()
        try {
            javaexec {
                main = "cucumber.api.cli.Main"
                classpath = configurations.testRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty',
                        '--plugin', 'html:build/cucumber-html-report',
                        '--plugin', 'json:build/cucumber.json',
                        '--plugin', 'rerun:build/rerun.txt',
                        '--glue', 'org.fundacionjala.pivotalapi', 'src/test/resources/features']
                jvmArgs = ["-DurlApi=" + urlApi]
            }
        } catch (Exception e) {

        }
        sleep(5000)
        generateReport("build/cucumber.json", "cucumber-html-report")
    }
}

test {
    exclude 'org/fundacionjala/pivotal/cucumber/**'
}

def generateReport(String pathCucumber, String pathReport) {
    File reportOutputDirectory = new File(pathReport)
    List<String> jsonReportFiles = new ArrayList<>()
    jsonReportFiles.add(pathCucumber)
    String buildProjectName = "pivotalapitest"
    Configuration configuration = new Configuration(reportOutputDirectory, buildProjectName)
    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
    reportBuilder.generateReports()
}
